<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
    
    <!-- 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 -->
    <context:component-scan base-package="com.yixun.ccmz.dao"/>
    <context:component-scan base-package="com.yixun.ccmz.service"/>
    
	<!-- 基于@AspectJ切面的驱动器 -->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

    <!-- 指定配置文件的位置，貌似不指定也好使 -->
    <context:property-placeholder location="classpath:jdbc.properties"/> 
    
    <!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" 
		p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.url}"
		p:username="${jdbc.username}"
		p:password="${jdbc.password}" />
		
<!-- 	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close"
		p:driverClass="${jdbc.driverClassName}"
		p:jdbcUrl="${jdbc.url}"
		p:user="${jdbc.username}"
		p:password="${jdbc.password}"
		p:maxPoolSize="40"
		p:minPoolSize="1"
		p:initialPoolSize="1"
		p:maxIdleTime="20"/>		 -->

	<!-- 配置Jdbc模板  -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource" />
		
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
		
    <!-- 对标识@Transactional注解的Bean进行加工处理，以织入事务管理切面 proxy-target-class="true" 使用CGLib动态代理  false是接口代理-->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    
		
	<!-- 通过XML AOP配置提供事务增强，让service包下所有Bean的所有方法拥有事务 （基于schema的AOP配置方式 如果声明了tx:annotation-driven,则这段应该也可以省略了
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceMethod"
			expression="(execution(* com.yixun.ccmz.service..*(..))) and (@annotation(org.springframework.transaction.annotation.Transactional))" />
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*"/>			
		</tx:attributes>
	</tx:advice>
	-->
</beans>
